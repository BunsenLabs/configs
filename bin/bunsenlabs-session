#!/bin/sh

if test -n "$1"; then
    echo "Syntax: bunsenlabs-session"
    echo
    echo "See the bunsenlabs-session(1) manpage for help."
  exit
fi

BL_SESSION=xorg

# check who calls here
case $0 in
    *bunsenlabs-session-wayland)
        BL_SESSION=wayland
        export BL_SESSION
    ;;
esac

usr_confdir="${XDG_CONFIG_HOME:-$HOME/.config}"
usr_autostart="$usr_confdir/bunsen/autostart"
usr_envfile="$usr_confdir/bunsen/environment"
usr_setupflagfile="$usr_confdir/bunsen/bl-setup"
usr_xsessionrc="$HOME/.xsessionrc"
usr_resources="$HOME/.Xresources"

default_autostart='/usr/share/bunsen/skel/.config/bunsen/autostart'
bl_autostart='/usr/lib/bunsen/configs/bunsen-autostart'

if [ "$BL_SESSION" = 'wayland' ]; then
    usr_autostart="$usr_confdir/bunsen/autostart-wayland"
    usr_envfile="$usr_confdir/bunsen/environment-wayland"
    default_autostart='/usr/share/bunsen/skel/.config/bunsen/autostart-wayland'
fi

# Export keyboard layout from /etc/default/keyboard
if [ "$BL_SESSION" = 'wayland' ]; then
    . /etc/default/keyboard
    [ -n "$XKBMODEL" ] && export XKB_DEFAULT_MODEL=$XKBMODEL
    [ -n "$XKBLAYOUT" ] && export XKB_DEFAULT_LAYOUT=$XKBLAYOUT
    [ -n "$XKBVARIANT" ] && export XKB_DEFAULT_VARIANT=$XKBVARIANT
    [ -n "$XKBOPTIONS" ] && export XKB_DEFAULT_OPTIONS=$XKBOPTIONS
    [ -n "$XKBRULES" ] && export XKB_DEFAULT_RULES=$XKBRULES
fi

# Clean up after GDM (GDM sets the number of desktops to one).
if [ "$BL_SESSION" = 'xorg' ]; then
    xprop -root -remove _NET_NUMBER_OF_DESKTOPS \
      -remove _NET_DESKTOP_NAMES \
      -remove _NET_CURRENT_DESKTOP 2> /dev/null
fi

# This section is only executed on first boot.
if [ ! -e "$usr_setupflagfile" ]
then
    # Import user config files
    if [ -x /usr/lib/bunsen/configs/bl-user-setup ]
    then
        /usr/lib/bunsen/configs/bl-user-setup --install || true
    fi

    # Actions here are usually handled by scripts in /etc/X11/Xsession.d/
    # but on first boot, user config files were not yet imported at that point.
    # This makes a difference to the live session, unless user logs out/in.

    # Merge ~/.Xresources
    # (usually done by /etc/X11/Xsession.d/30x11-common_xresources)
    if [ "$BL_SESSION" = 'xorg' ]; then
        test -r "$usr_resources" && xrdb -merge "$usr_resources" || echo "$0: cannot merge $usr_resources" >&2
    fi

    # Set up the user environment for X sessions.
    # (usually sourced by /etc/X11/Xsession.d/40x11-common_xsessionrc)
    if [ "$BL_SESSION" = 'xorg' ]; then
        test -r "$usr_xsessionrc" && . "$usr_xsessionrc" || echo "$0: cannot source $usr_xsessionrc" >&2
    fi

    # Set up user directories
    # (usually run by /etc/X11/Xsession.d/60xdg-user-dirs-update)
    if [ -x /usr/bin/xdg-user-dirs-update ]; then
        /usr/bin/xdg-user-dirs-update
    fi
fi

# Set up the BL-specific environment.
test -r "$usr_envfile" && . "$usr_envfile" || echo "$0: cannot source $usr_envfile" >&2

# At least try to ensure user has an autostart file.
[ -e "$usr_autostart" ] || {
    echo "$0: ERROR $usr_autostart does not exist, copying in $default_autostart" >&2
    cp "$default_autostart" "$usr_autostart"
}

# Set default window manager.
if [ "$BL_SESSION" = 'wayland' ]; then
    win_man=labwc
else
    win_man=openbox
fi

# Check if user has set an alternative window manager.
# This would be the first setting in $usr_autostart
# just use first uncommented line of file, then break.
[ -r "$usr_autostart" ] && {
    while read -r first rest
    do
        case "$first" in
        \#*|'')
            continue
            ;;
        window_manager=*)
            win_man="${first#window_manager=}"
            ;;
        esac
        break
    done < "$usr_autostart"
}

hash "$win_man" 2>/dev/null || { echo "$0: Window manager command \"$win_man\" not found" >&2; exit 1;}

[ "$BL_SESSION" = 'wayland' ] && sleep 1 # temporary fix for lightdm on wayland https://forums.bunsenlabs.org/viewtopic.php?pid=137666#p137666

# Run the window manager.
case "$win_man" in
openbox)
    exec /usr/bin/openbox --config-file "$usr_confdir/openbox/bl-rc.xml" --startup "$bl_autostart"
    ;;
labwc)
    exec /usr/bin/labwc --startup "$bl_autostart"
    ;;
*)
# NOTE: in this case $bl_autostart and $usr_autostart are run in a subshell and cannot export variables.
    (
    until pgrep -x "$win_man"
    do
        sleep 0.5s
    done
    "$bl_autostart"
    ) &
    exec "$win_man"
    ;;
esac
